{"id":1,"parentId":-1,"label":"snippets","lastId":9,"children":[{"id":3,"parentId":1,"label":"iac-pipeline","value":"trigger:\n  branches:\n    include:\n      - '*'\n\npool:\n  vmImage: ubuntu-latest\n\nstages:\n  - stage: Validate\n    jobs:\n      - job: ValidateBicep\n        displayName: Validate Bicep\n        steps:\n          - task: AzureCLI@2\n            displayName: \"Validate Bicep with what-if\"\n            inputs:\n              azureSubscription: 'tbd'\n              scriptType: 'bash'\n              scriptLocation: 'inlineScript'\n              inlineScript: 'az deployment sub what-if --template-file ./iac/main.bicep --location westeurope'\n\n  - stage: Deploy\n    jobs:\n      - deployment: Deployment\n        displayName: Deploy Azure infrastructure\n        environment: Development\n        strategy:\n          runOnce:\n            deploy:\n              steps:\n                - checkout: self\n                - task: AzureCLI@2\n                  displayName: \"Deploy Azure infrastructure\"\n                  inputs:\n                    azureSubscription: 'tbd'\n                    scriptType: \"bash\"\n                    scriptLocation: \"inlineScript\"\n                    inlineScript: \"az deployment sub create --template-file ./iac/main.bicep --location westeurope\"\n","children":[],"resolveSyntax":true},{"id":9,"parentId":1,"label":"wf-pipeline","value":"trigger:\n  branches:\n    include:\n      - '*'\n\npool:\n  vmImage: ubuntu-latest\n\nstages:\n  - stage: Build\n    jobs:\n      - job: Build\n        displayName: Build\n        steps:\n          - task: CopyFiles@2\n            displayName: Copy workflow files\n            inputs:\n              SourceFolder: \"$(System.DefaultWorkingDirectory)/src/workflowapp\"\n              Contents: |\n                **\n                !**/.vscode/**\n                !**/.git/**\n                !.gitignore\n                !.funcignore\n              TargetFolder: \"$(Build.ArtifactStagingDirectory)\"\n              CleanTargetFolder: true\n          - task: ArchiveFiles@2\n            displayName: Build zip file for deployment\n            inputs:\n              rootFolderOrFile: \"$(Build.ArtifactStagingDirectory)\"\n              includeRootFolder: false\n              archiveType: \"zip\"\n              archiveFile: \"$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip\"\n              replaceExistingArchive: true\n          - publish: \"$(Build.ArtifactStagingDirectory)\"\n            displayName: \"Publish zip\"\n            artifact: drop\n\n  - stage: Deploy\n    jobs:\n      - deployment: Deployment\n        displayName: Deploy LogicApp Workflows\n        environment: Development\n        strategy:\n          runOnce:\n            deploy:\n              steps:\n                - task: AzureFunctionApp@1\n                  displayName: Deploy LogicApp Workflows\n                  inputs:\n                    azureSubscription: 'tbd'\n                    appType: 'workflowapp'\n                    appName: 'TBD'\n                    package: '$(Pipeline.Workspace)/**/*.zip'\n                    deploymentMethod: 'zipDeploy'","children":[],"resolveSyntax":true},{"id":4,"parentId":1,"label":"la-appsettings","value":"appSettings: [\n        {\n          name: 'APP_KIND'\n          value: 'workflowApp'\n        }\n        {\n          name: 'FUNCTIONS_EXTENSION_VERSION'\n          value: '~4'\n        }\n        {\n          name: 'FUNCTIONS_WORKER_RUNTIME'\n          value: 'node'\n        }\n        {\n          name: 'AzureFunctionsJobHost__extensionBundle__id'\n          value: 'Microsoft.Azure.Functions.ExtensionBundle.Workflows'\n        }\n        {\n          name: 'AzureFunctionsJobHost__extensionBundle__version'\n          value: '[1.*, 2.0.0)'\n        }\n        {\n          name: 'WEBSITE_NODE_DEFAULT_VERSION'\n          value: '~16'\n        }\n        {\n          name: 'AzureWebJobsStorage'\n          value: 'DefaultEndpointsProtocol=https;AccountName=${stg.name};AccountKey=${listKeys(stg.id, stg.apiVersion).keys[0].value};EndpointSuffix=${environment().suffixes.storage}'\n        }\n        {\n          name: 'myCustomSetting'\n          value: '1'\n        }\n      ]","children":[],"resolveSyntax":true},{"id":9,"parentId":1,"label":"bash","folder":true,"children":[{"id":6,"parentId":9,"label":"az what-if","value":"az deployment sub what-if --template-file ./iac/main.bicep --location westeurope","children":[],"resolveSyntax":true},{"id":7,"parentId":9,"label":"az deploy","value":"az deployment sub create --template-file ./iac/main.bicep --location westeurope","children":[],"resolveSyntax":true},{"id":8,"parentId":9,"label":"az publish acr","value":"az bicep publish --file ./iac/modules/storage.bicep --target br:codemasters7ii2xg.azurecr.io/modules/storage:1.0","children":[]}]},{"id":9,"parentId":1,"label":"modules","folder":true,"children":[{"id":10,"parentId":9,"label":"acr","value":"param suffix string\nparam location string = resourceGroup().location\n\nresource acr 'Microsoft.ContainerRegistry/registries@2022-12-01' = {\n  name: 'codemasters${suffix}'\n  location: location\n  sku: {\n    name: 'Basic'\n  }\n  properties: {\n    publicNetworkAccess: 'Enabled'\n  }\n}\n\noutput acrId string = acr.id\n","children":[]},{"id":11,"parentId":9,"label":"storage","value":"param name string\nparam location string = resourceGroup().location\nparam tags object = resourceGroup().tags\n\nresource st 'Microsoft.Storage/storageAccounts@2022-09-01' = {\n  name: name\n  location: location\n  kind: 'StorageV2'\n  sku: {\n    name: 'Standard_LRS'\n  }\n  tags: tags\n  properties: {\n    allowBlobPublicAccess: false\n    minimumTlsVersion: 'TLS1_2'\n  }\n}\n","children":[]}]}]}